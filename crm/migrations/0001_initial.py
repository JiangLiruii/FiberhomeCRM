# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-09 04:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('email', models.EmailField(blank=True, max_length=64, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('source', models.SmallIntegerField(choices=[(0, '转介绍'), (1, '自主开发'), (2, '总部资源')], default=0)),
                ('referral_from', models.CharField(blank=True, max_length=64, null=True, verbose_name='转介绍人姓名')),
                ('content', models.TextField(verbose_name='基本沟通内容介绍')),
                ('status', models.SmallIntegerField(choices=[(0, '有意向'), (1, '无意向'), (2, '未沟通'), (3, '已签约')], default=0)),
                ('memo', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '客户表',
                'verbose_name_plural': '客户表',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('addr', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': '地区',
                'verbose_name_plural': '地区',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_approved', models.BooleanField(default=False, verbose_name='合同已审核')),
                ('amount', models.PositiveIntegerField(verbose_name='合同额')),
                ('contract_num', models.CharField(max_length=32)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Customer')),
            ],
            options={
                'verbose_name_plural': '签单表',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fields', models.SmallIntegerField(choices=[(0, 'PTN'), (1, 'OTN'), (2, 'CTrans'), (3, '路由器'), (4, '其他')], default=0, verbose_name='产出线')),
                ('target_revenue', models.PositiveSmallIntegerField(verbose_name='预期销售额')),
                ('period', models.PositiveSmallIntegerField(verbose_name='周期(月)')),
                ('outline', models.TextField()),
            ],
            options={
                'verbose_name': '产出线',
                'verbose_name_plural': '产出线',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('url_name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='应收数额')),
                ('payment_amount', models.PositiveIntegerField(verbose_name='已付款')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Field', verbose_name='产出线')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Customer')),
            ],
            options={
                'verbose_name_plural': '付款记录',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('menus', models.ManyToManyField(blank=True, to='crm.Menu')),
            ],
            options={
                'verbose_name_plural': '角色',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('roles', models.ManyToManyField(blank=True, null=True, to='crm.Role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '客户经理',
                'verbose_name_plural': '客户经理',
            },
        ),
        migrations.CreateModel(
            name='VisitList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CRM_type', models.SmallIntegerField(choices=[(0, '陌拜'), (1, '宴请'), (2, '家访'), (3, '招投标'), (4, '娱乐活动')], verbose_name='客户拜访类型')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='结束日期')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.District', verbose_name='地区')),
                ('sales', models.ManyToManyField(to='crm.UserProfile')),
                ('visit_fields', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Field')),
            ],
            options={
                'verbose_name': '拜访表',
                'verbose_name_plural': '拜访表',
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='sales',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.VisitList', verbose_name='签单类型'),
        ),
        migrations.AddField(
            model_name='document',
            name='sales',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile', verbose_name='销售员'),
        ),
        migrations.AddField(
            model_name='customer',
            name='fields',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Field', verbose_name='细分领域'),
        ),
        migrations.AddField(
            model_name='customer',
            name='sales',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.UserProfile'),
        ),
        migrations.AddField(
            model_name='customer',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='crm.Tag'),
        ),
    ]
